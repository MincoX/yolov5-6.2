# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license

# Parameters
nc: 80  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple

# helmet_license_v1: [17, 9] [25, 15] [19, 33] [40, 24] [36, 54] [58, 78] [82, 120] [122, 189] [197, 361]
anchors:
  - [ 17,9, 25,15, 19,33 ]  # P3/8
  - [ 40,24, 36,54, 58,78 ]  # P4/16
  - [ 82,120, 122,189, 197,361 ]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  [ [ -1, 1, Conv, [ 64, 6, 2, 2 ] ],  # 0-P1/2; dp: 1; wd: 32; args: [3, 32, 6, 2, 2]; => 1,3,640,640 => 1,32,320,320
    [ -1, 1, Conv, [ 128, 3, 2 ] ],  # 1-P2/4; 1; 64; [32, 64, 3, 2]; => 1,32,320,320 => 1,64,160,160
    [ -1, 3, C3, [ 128 ] ], # 1; 64; [64, 64, 1]; => 1,64,160,160 => 1,64,160,160
    [ -1, 1, Conv, [ 256, 3, 2 ] ],  # 3-P3/8; 1; 128; [64, 128, 3, 2]; => 1,64,160,160 => 1,128,80,80

    [ -1, 1, CoordAtt,[ 256 ] ],

    [ -1, 6, C3, [ 256 ] ], # 2; 128; [128, 128, 2]; => 1,128,80,80 => 1,128,80,80
    [ -1, 1, Conv, [ 512, 3, 2 ] ],  # 5-P4/16; 1; 256; [128, 256, 3, 2]; => 1,128,80,80 => 1,256,40,40

    [ -1, 1, CoordAtt,[ 512 ] ],

    [ -1, 9, C3, [ 512 ] ], # 3; 256; [256, 256, 3]; => 1,256,40,40 => 1,256,40,40
    [ -1, 1, Conv, [ 1024, 3, 2 ] ],  # 7-P5/32; 1; 512; [256, 512, 3, 2]; => 1,256,40,40 => 1,512,20,20

    [ -1, 1, CoordAtt,[ 1024 ] ],

    [ -1, 3, C3, [ 1024 ] ], # 1; 512; [512, 512, 1]; => 1,512,20,20 => 1,512,20,20
    [ -1, 1, SPPF, [ 1024, 5 ] ],  # 9; 1; 512; [512, 512, 5]; => 1,512,20,20 => 1,512,20,20
  ]

# YOLOv5 v6.0 head
head:
  [ [ -1, 1, Conv, [ 512, 1, 1 ] ], # 1; 256; [512, 256, 1, 1]; => 1,512,20,20 => 1,256,20,20
    [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ], # 1; 256; [None, 2, 'nearest']; => 1,256,20,20 => 1,256,40,40
    #    [ [ -1, 6 ], 1, Concat, [ 1 ] ],  # cat backbone P4; 1; 256; [1]; => 1,256,40,40 => 1,512,40,40
    [ [ -1, 8 ], 1, Concat, [ 1 ] ],  # cat backbone P4; 1; 256; [1]; => 1,256,40,40 => 1,512,40,40
    [ -1, 3, C3, [ 512, False ] ],  # 13; 1; 256; [512, 256, 1, False]; => 1,512,40,40 => 1,256,40,40

    [ -1, 1, Conv, [ 256, 1, 1 ] ], # 1; 128; [256, 128, 1, 1]; => 1,256,40,40 => 1,128,40,40
    [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ], # 1; 128; [None, 2, 'nearest']; => 1,128,40,40 => 1,128,80,80
    #    [ [ -1, 4 ], 1, Concat, [ 1 ] ],  # cat backbone P3; 1; 128; [1]; => 1,128,80,80 => 1,256,80,80
    [ [ -1, 5 ], 1, Concat, [ 1 ] ],  # cat backbone P3; 1; 128; [1]; => 1,128,80,80 => 1,256,80,80
    [ -1, 3, C3, [ 256, False ] ],  # 17 (P3/8-small); 1; 128; [256, 128, 1, False]; => 1,256,80,80 => 1,128,80,80

    [ -1, 1, Conv, [ 256, 1, 1 ] ], # 1; 128; [256, 128, 1, 1]; => 1,256,40,40 => 1,128,40,40
    [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ], # 1; 128; [None, 2, 'nearest']; => 1,128,40,40 => 1,128,80,80
    #    [ [ -1, 4 ], 1, Concat, [ 1 ] ],  # cat backbone P3; 1; 128; [1]; => 1,128,80,80 => 1,256,80,80
    [ [ -1, 5 ], 1, Concat, [ 1 ] ],  # cat backbone P3; 1; 128; [1]; => 1,128,80,80 => 1,256,80,80
    [ -1, 3, C3, [ 256, False ] ],  # 17 (P3/8-small); 1; 128; [256, 128, 1, False]; => 1,256,80,80 => 1,128,80,80

    [ -1, 1, Conv, [ 256, 3, 2 ] ], # 1; 128; [128, 128, 3, 2] 1,128,80,80 => 1,128,40,40
    #    [ [ -1, 14 ], 1, Concat, [ 1 ] ],  # cat head P4; 1; 128; [1] 1,128,40,40 => 1,256,40,40
    [ [ -1, 17 ], 1, Concat, [ 1 ] ],  # cat head P4; 1; 128; [1] 1,128,40,40 => 1,256,40,40
    [ -1, 3, C3, [ 512, False ] ],  # 20 (P4/16-medium); 1; 256; [256, 256, 1, False]; => 1,256,40,40 => 1,256,40,40

    [ -1, 1, Conv, [ 512, 3, 2 ] ], # 1; 256; [256, 256, 3, 2] 1,256,40,40 => 1,256,20,20
    #    [ [ -1, 10 ], 1, Concat, [ 1 ] ],  # cat head P5; 1; 256; [1] 1,256,20,20 => 1,512,20,20
    [ [ -1, 13 ], 1, Concat, [ 1 ] ],  # cat head P5; 1; 256; [1] 1,256,20,20 => 1,512,20,20
    [ -1, 3, C3, [ 1024, False ] ],  # 23 (P5/32-large); 1; 512; [512, 512, 1, False]; => 1,512,20,20 => 1,512,20,20

    #    [ [ 17, 20, 23 ], 1, Detect, [ nc, anchors ] ],  # Detect(P3, P4, P5); 1; 512; [80, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
    [ [ 20, 23, 26 ], 1, Detect, [ nc, anchors ] ],  # Detect(P3, P4, P5); 1; 512; [80, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
  ]
